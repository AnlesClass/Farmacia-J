package Vista;

import Persistencia.Conexion;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JButton;
import javax.swing.table.DefaultTableModel;

public class PedidoProducto extends javax.swing.JFrame {

    DefaultTableModel dtmCompra;
    JButton btnGenerarPedido;

    public PedidoProducto(String nombreProducto, DefaultTableModel dtmCompra, JButton btnGenerarPedido) {
        initComponents();
        rellenarComboBox();
        comboxProducto.setSelectedItem(nombreProducto);
        this.btnGenerarPedido = btnGenerarPedido;
        this.dtmCompra = dtmCompra;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblProducto = new javax.swing.JLabel();
        lblCantidad = new javax.swing.JLabel();
        comboxProducto = new javax.swing.JComboBox<>();
        chboxProductoSelect = new javax.swing.JCheckBox();
        spnCantidad = new javax.swing.JSpinner();
        btnAgregar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblProducto.setText("Producto");

        lblCantidad.setText("Cantidad");

        comboxProducto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        comboxProducto.setEnabled(false);

        chboxProductoSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chboxProductoSelectActionPerformed(evt);
            }
        });

        spnCantidad.setModel(new javax.swing.SpinnerNumberModel(1, 1, 1000, 1));

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCantidad)
                            .addComponent(lblProducto))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(spnCantidad)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAgregar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(comboxProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(chboxProductoSelect)))
                        .addGap(21, 21, 21))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(lblProducto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(comboxProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chboxProductoSelect))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblCantidad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spnCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregar))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rellenarComboBox() {
        try {
            Statement sql = Conexion.conexionMySQL().createStatement();
            var rs = sql.executeQuery("SELECT Nombre FROM Producto;");
            while (rs.next()) {
                comboxProducto.addItem(rs.getString(1));
            }
        } catch (SQLException ex) {
            System.out.println("Error: " + ex.toString());
        }
    }

    private void chboxProductoSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chboxProductoSelectActionPerformed
        //Activar o desactivar Combox
        comboxProducto.setEnabled(chboxProductoSelect.isSelected());
    }//GEN-LAST:event_chboxProductoSelectActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        //Enviar todo a la siguiente tabla.
        var vector = new String[3];
        devolver(vector);
        dtmCompra.addRow(vector);
        btnGenerarPedido.setEnabled(true);
        this.dispose();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private String[] devolver(String[] datosPedido) {
        String nombreFinal = comboxProducto.getSelectedItem().toString();
        String precioFinal = "";
        String cantidad = spnCantidad.getValue().toString();
        try {
            Statement sql = Conexion.conexionMySQL().createStatement();
            var rs = sql.executeQuery("SELECT Precio FROM Producto WHERE Nombre = '" + nombreFinal + "';");
            if (rs.next()) {
                precioFinal = rs.getString(1);
            }
        } catch (SQLException ex) {
        }

        datosPedido[0] = nombreFinal;
        datosPedido[1] = precioFinal;
        datosPedido[2] = cantidad;
        return datosPedido;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JCheckBox chboxProductoSelect;
    private javax.swing.JComboBox<String> comboxProducto;
    private javax.swing.JLabel lblCantidad;
    private javax.swing.JLabel lblProducto;
    private javax.swing.JSpinner spnCantidad;
    // End of variables declaration//GEN-END:variables
}
