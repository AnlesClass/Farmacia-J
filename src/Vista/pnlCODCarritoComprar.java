package Vista;

import Persistencia.Conexion;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;

public class pnlCODCarritoComprar extends javax.swing.JPanel {

    DefaultTableModel dtmVenta;
    DefaultTableModel dtmCompra;

    public pnlCODCarritoComprar() {
        initComponents();
        dtmVenta = (DefaultTableModel) tblVenta.getModel();
        dtmCompra = (DefaultTableModel) tblCompra.getModel();
        cargarProductos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popmnComprar = new javax.swing.JPopupMenu();
        mnItemVender = new javax.swing.JMenuItem();
        lblProductos = new javax.swing.JLabel();
        lblCarrito = new javax.swing.JLabel();
        btnGenerarPedido = new javax.swing.JButton();
        tfdBuscaNombre = new javax.swing.JTextField();
        btnBuscaNombre = new javax.swing.JButton();
        scrollVenta = new javax.swing.JScrollPane();
        tblVenta = new javax.swing.JTable();
        scrollCompra = new javax.swing.JScrollPane();
        tblCompra = new javax.swing.JTable();
        lblImporteTotal = new javax.swing.JTextField();
        btnCalcular = new javax.swing.JButton();

        mnItemVender.setText("Comprar");
        mnItemVender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnItemVenderActionPerformed(evt);
            }
        });
        popmnComprar.add(mnItemVender);

        setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblProductos.setText("Producto(s)");

        lblCarrito.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icono_cestaCompra.png"))); // NOI18N
        lblCarrito.setText("Carrito");

        btnGenerarPedido.setText("Generar Pedido");
        btnGenerarPedido.setEnabled(false);
        btnGenerarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarPedidoActionPerformed(evt);
            }
        });

        btnBuscaNombre.setText("Filtrar");
        btnBuscaNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscaNombreActionPerformed(evt);
            }
        });

        scrollVenta.setBackground(new java.awt.Color(51, 51, 51));
        scrollVenta.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        scrollVenta.setForeground(new java.awt.Color(51, 51, 51));

        tblVenta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblVenta.setComponentPopupMenu(popmnComprar);
        scrollVenta.setViewportView(tblVenta);
        if (tblVenta.getColumnModel().getColumnCount() > 0) {
            tblVenta.getColumnModel().getColumn(0).setResizable(false);
            tblVenta.getColumnModel().getColumn(0).setPreferredWidth(100);
            tblVenta.getColumnModel().getColumn(1).setResizable(false);
            tblVenta.getColumnModel().getColumn(1).setPreferredWidth(50);
        }

        scrollCompra.setBackground(new java.awt.Color(51, 51, 51));
        scrollCompra.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        tblCompra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "P.U.", "Cantidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCompra.getTableHeader().setReorderingAllowed(false);
        tblCompra.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tblCompraPropertyChange(evt);
            }
        });
        scrollCompra.setViewportView(tblCompra);
        if (tblCompra.getColumnModel().getColumnCount() > 0) {
            tblCompra.getColumnModel().getColumn(0).setResizable(false);
            tblCompra.getColumnModel().getColumn(0).setPreferredWidth(150);
            tblCompra.getColumnModel().getColumn(1).setResizable(false);
            tblCompra.getColumnModel().getColumn(1).setPreferredWidth(50);
            tblCompra.getColumnModel().getColumn(2).setResizable(false);
            tblCompra.getColumnModel().getColumn(2).setPreferredWidth(50);
        }

        lblImporteTotal.setText("Total:");
        lblImporteTotal.setEnabled(false);

        btnCalcular.setText("C");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblProductos)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tfdBuscaNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscaNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(scrollVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(btnCalcular)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lblImporteTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(scrollCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCarrito)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGenerarPedido)))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblProductos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnBuscaNombre)
                        .addComponent(lblCarrito)
                        .addComponent(btnGenerarPedido))
                    .addComponent(tfdBuscaNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(scrollCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblImporteTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCalcular))))
                .addContainerGap(14, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscaNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscaNombreActionPerformed
        cargarProductos();
    }//GEN-LAST:event_btnBuscaNombreActionPerformed

    private void mnItemVenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnItemVenderActionPerformed
        //Abrir ventana compra que devuelve un objeto para comprar.
        int index = tblVenta.getSelectedRow();
        String nombreProducto = dtmVenta.getValueAt(index, 0).toString();
        PedidoProducto ventanaPedidoProducto = new PedidoProducto(nombreProducto, dtmCompra, btnGenerarPedido);
        ventanaPedidoProducto.setLocationRelativeTo(this);
        ventanaPedidoProducto.setVisible(true);
    }//GEN-LAST:event_mnItemVenderActionPerformed

    private void tblCompraPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tblCompraPropertyChange
        //
    }//GEN-LAST:event_tblCompraPropertyChange

    private void btnGenerarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarPedidoActionPerformed
        //Boleta o Factura
        String[] opciones = {"Factura", "Boleta"};
        JOptionPane.showInputDialog(this, "Selecciona una opción:", "Boleta o Factura", JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);
    }//GEN-LAST:event_btnGenerarPedidoActionPerformed

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
        //Obtiene filas, itera y suma todos los precios * cantidad.
        float total = 0;
        int filas = dtmCompra.getRowCount();
        if (filas > 0) {
            for (int i = 0; i < filas; i++) {
                float precio = Float.parseFloat(dtmCompra.getValueAt(i, 1).toString());
                int cantidad = Integer.parseInt(dtmCompra.getValueAt(i, 2).toString());
                total += precio * cantidad;
            }
        }
        lblImporteTotal.setText("Total: " + String.valueOf(total));
    }//GEN-LAST:event_btnCalcularActionPerformed

    //Este método sirve para cargar Productos para la venta.
    private void cargarProductos() {
        dtmVenta.setRowCount(0);
        String sql = "SELECT Nombre, Precio FROM Producto WHERE Nombre LIKE ?;";
        try {
            PreparedStatement ps = Conexion.conexionMySQL().prepareStatement(sql);
            ps.setString(1, tfdBuscaNombre.getText() + "%");
            var rs = ps.executeQuery();
            var vector = new String[2];
            while (rs.next()) {
                vector[0] = rs.getString(1);
                vector[1] = rs.getString(2);
                dtmVenta.addRow(vector);
            }
        } catch (SQLException ex) {
            System.out.println("Error al 'Filtrar': " + ex.toString());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscaNombre;
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton btnGenerarPedido;
    private javax.swing.JLabel lblCarrito;
    private javax.swing.JTextField lblImporteTotal;
    private javax.swing.JLabel lblProductos;
    private javax.swing.JMenuItem mnItemVender;
    private javax.swing.JPopupMenu popmnComprar;
    private javax.swing.JScrollPane scrollCompra;
    private javax.swing.JScrollPane scrollVenta;
    private javax.swing.JTable tblCompra;
    private javax.swing.JTable tblVenta;
    private javax.swing.JTextField tfdBuscaNombre;
    // End of variables declaration//GEN-END:variables
}
